{"version":3,"sources":["services/tree.js","services/document.js","components/node.js","components/document.js","App.js","serviceWorker.js","index.js"],"names":["traverse","parent","node","id","result","i","child","find","children","grandParent","length","createNode","shortid","generate","type","value","focus","modify","callback","rootNode","getRootNode","props","tree","clone","getTree","unfocusNode","forEach","_searchTree","searchTree","state","setState","identify","Node","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","keyMap","8","9","13","38","40","contentEditable","React","createRef","handleFocus","current","event","target","name","keyCode","index","indexOf","sibling","parentIndex","parentSibling","preventDefault","_","remove","splice","unshift","prepend","shiftKey","siblings","newParent","push","nest","classname","root","concat","_this2","react_default","a","createElement","className","classNames","react_contenteditable_default","innerRef","html","onKeyDown","onChange","handleInput","map","key","Component","Document","window","DOC","node_Node","App","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd3b0441.chunk.js","sourcesContent":["import { clone, find } from 'lodash'\n\nexport const getRootNode = node => {\n  let parent = node.props.parent\n  if (!parent) return node\n  return getRootNode(parent)\n}\n\nexport const getTree = node => {\n  return clone(node.props.node)\n}\n\nexport const searchTree = (child, id) => {\n  let grandParent = null\n  let parent = null\n  if (child.id === id) {\n    return { grandParent, parent, child }\n  } else {\n    return traverse(parent, child, id)\n  }\n}\n\nconst traverse = (parent, node, id) => {\n  let child = find(node.children, { id: id })\n  if (child) return { grandParent: parent, parent: node, child: child }\n  let result, i\n  for (i = 0; i < node.children.length; i++) {\n    let child = node.children[i]\n    result = traverse(node, child, id)\n    if (result) break\n  }\n  return result\n}\n","import _ from 'lodash'\nimport shortid from 'shortid'\nimport { getRootNode, getTree, searchTree } from './tree'\n\nconst createNode = () => {\n  return {\n    id: shortid.generate(),\n    type: 'text',\n    value: '',\n    children: [],\n    focus: true\n  }\n}\n\nconst unfocusNode = node => {\n  node.focus = false\n  if (node.children && node.children.length !== 0) {\n    node.children.forEach((node) => {\n      return unfocusNode(node)\n    })\n  }\n  return node\n}\n\nconst modify = (node, callback) => {\n  const rootNode = getRootNode(node)\n  const tree = getTree(rootNode)\n  unfocusNode(tree)\n  const { grandParent, parent, child } = searchTree(tree, node.state.id)\n  callback(child, parent, grandParent)\n  rootNode.setState(tree)\n}\n\nexport const identify = node => {\n  node.id = shortid.generate()\n  node.focus = false\n  if (node.children && node.children.length !== 0) {\n    node.children.forEach((node) => {\n      return identify(node)\n    })\n  }\n  return node\n}\n\nexport const update = (node, value) => {\n  modify(node, (child) => {\n    child.value = value\n    child.focus = true\n  })\n}\n\nexport const append = node => {\n  modify(node, (child, parent) => {\n    parent.children.splice(parent.children.indexOf(child) + 1, 0, createNode())\n  })\n}\n\nexport const prepend = node => {\n  modify(node, (child) => {\n    child.children.unshift(createNode())\n  })\n}\n\nexport const remove = node => {\n  modify(node, (child, parent) => {\n    let index = parent.children.indexOf(child)\n    if (index === 0) {\n      parent.focus = true\n    } else {\n      parent.children[index - 1].focus = true\n    }\n    _.remove(parent.children, { id: child.id })\n  })\n}\n\nexport const nest = node => {\n  modify(node, (child, parent) => {\n    if (!parent) return\n    let siblings = parent.children\n    let newParent = siblings[siblings.indexOf(child) - 1]\n    if (!newParent) return\n    child.focus = true\n    newParent.children.push(child)\n    _.remove(siblings, { id: child.id })\n  })\n}\n\nexport const unnest = node => {\n  modify(node, (child, parent, grandParent) => {\n    if (parent && grandParent) {\n      _.remove(parent.children, { id: child.id })\n      let index = grandParent.children.indexOf(parent)\n      child.focus = true\n      grandParent.children.splice(index + 1, 0, child)\n    }\n  })\n}\n\nexport const goUp = node => {\n  modify(node, (child, parent) => {\n    let index = parent.children.indexOf(child)\n    if (index === 0) {\n      parent.focus = true\n      return\n    }\n    let sibling = parent.children[index - 1]\n    if (sibling) {\n      if (sibling.children.length > 0) {\n        sibling.children[sibling.children.length - 1].focus = true\n        return\n      }\n      sibling.focus = true\n    }\n  })\n}\n\nexport const goDown = node => {\n  modify(node, (child, parent, grandParent) => {\n    if (child.children.length > 0) {\n      child.children[0].focus = true\n      return\n    }\n    let index = parent.children.indexOf(child)\n    let sibling = parent.children[index + 1]\n    if (sibling) {\n      sibling.focus = true\n      return\n    }\n    if (grandParent) {\n      let parentIndex = grandParent.children.indexOf(parent)\n      let parentSibling = grandParent.children[parentIndex + 1]\n      if (parentSibling) {\n        parentSibling.focus = true\n        return\n      }\n    }\n  })\n}\n","import React from 'react'\nimport ContentEditable from 'react-contenteditable'\nimport {\n  nest, unnest, remove, append, prepend, goUp, goDown, update\n} from '../services/document'\n\nexport default class Node extends React.Component {\n  keyMap = {\n    8: 'handleBackspaceKey',\n    9: 'handleTabKey',\n    13: 'handleEnterKey',\n    38: 'handleUpKey',\n    40: 'handleDownKey'\n  }\n\n  constructor(props) {\n    super(props)\n    this.contentEditable = React.createRef()\n    this.state = {\n      id: this.props.node.id,\n      type: this.props.node.type,\n      value: this.props.node.value,\n      focus: this.props.node.focus,\n      children: this.props.node.children\n    }\n  }\n\n  componentDidMount() {\n    this.handleFocus()\n  }\n\n  componentDidUpdate() {\n    this.handleFocus()\n  }\n\n  handleFocus() {\n    if (this.props.node.focus) {\n      let element = this.contentEditable.current\n      element.focus()\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ value: event.target.value })\n    update(this, event.target.value)\n  }\n\n  onKeyDown(event) {\n    let name = this.keyMap[event.keyCode]\n    if (name) return this[name](event)\n  }\n\n  handleUpKey(event) {\n    goUp(this)\n  }\n\n  handleDownKey(event) {\n    goDown(this)\n  }\n\n  handleBackspaceKey(event) {\n    if (this.state.value === '' && this.state.children.length === 0) {\n      event.preventDefault()\n      remove(this)\n    }\n  }\n\n  handleEnterKey(event) {\n    event.preventDefault()\n    if (this.state.children.length === 0) {\n      append(this)\n    } else {\n      prepend(this)\n    }\n  }\n\n  handleTabKey(event) {\n    event.preventDefault()\n    if (event.shiftKey) {\n      unnest(this)\n    } else {\n      nest(this)\n    }\n  }\n\n  classNames() {\n    let classname = 'node'\n    if (this.props.root)\n      classname = `${classname} is-root`\n    return classname\n  }\n\n  render() {\n    return (\n      <div className={this.classNames()}>\n        <ContentEditable\n          innerRef={this.contentEditable}\n          className=\"node-self\"\n          html={this.state.value}\n          onKeyDown={event => this.onKeyDown(event)}\n          onChange={event => this.handleInput(event)}\n        />\n        {this.state.children.map((node, index) => {\n          return <Node key={node.id} parent={this} node={node} />\n        })}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Node from './node'\nimport { identify } from '../services/document'\n\nexport default function Document() {\n  let rootNode = identify(window.DOC)\n  return (\n    <div className=\"document\">\n      <Node node={rootNode} root />\n    </div>\n  );\n}\n","import React from 'react'\nimport Document from './components/document'\n\nfunction App() {\n  return <Document />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}