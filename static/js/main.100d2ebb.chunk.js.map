{"version":3,"sources":["services/tree.js","handlers/arrowKeys.js","handlers/backspaceKey.js","handlers/enterKey.js","handlers/tabKey.js","handlers/render.js","components/node.js","handlers/input.js","components/document.js","App.js","serviceWorker.js","index.js"],"names":["identify","node","id","shortid","generate","children","length","forEach","getDocument","getRootNode","props","document","getTree","clone","state","updateDocument","setState","onChange","searchTree","child","grandParent","parent","traverse","result","i","find","handleUpKey","event","isOnFirstLine","preventDefault","goUp","getCaretPosition","handleDownKey","isOnLastLine","goDown","position","contentEditable","current","top","getLineHeight","clientHeight","prevNode","sibling","getParent","getPrevSibling","getPrevSiblingChild","focusedNode","caretPosition","nextNode","getChildren","getNextParentChild","indexOf","lastChild","parentChildren","index","handleBackspaceKey","pos","removeNode","tree","_searchTree","isOnlyChild","getLastChild","value","concat","remove","handleEnterKey","addNode","_splitValue","splitValue","prevNodeValue","nextNodeValue","newNode","createNode","splice","unshift","slice","type","handleTabKey","shiftKey","unnest","nest","siblings","newParent","push","_searchTree2","applyFocus","docState","element","focus","Node","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","keyMap","8","9","13","38","40","React","createRef","handler","keyCode","_this2","react_default","a","createElement","className","react_contenteditable_default","innerRef","html","onKeyDown","target","handleInput","map","key","Component","Document","window","DOC","node_Node","App","document_Document","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wRAGaA,EAAW,SAAXA,EAAWC,GAOtB,OANAA,EAAKC,GAAKC,IAAQC,WACdH,EAAKI,UAAqC,IAAzBJ,EAAKI,SAASC,QACjCL,EAAKI,SAASE,QAAQ,SAACN,GACrB,OAAOD,EAASC,KAGbA,GAGIO,EAAc,SAAAP,GACzB,OAAOQ,EAAYR,GAAMS,MAAMC,UAGpBC,EAAU,SAAAX,GACrB,OAAOY,gBAAML,EAAYP,GAAMa,MAAMb,OAG1Bc,EAAiB,SAACd,EAAMS,GACnC,IAAMC,EAAWH,EAAYP,GAC7BU,EAASK,SAASN,GAClBC,EAASM,YAIEC,EAAa,SAACC,EAAOjB,GAGhC,OAAIiB,EAAMjB,KAAOA,EACR,CAAEkB,YAHO,KAGMC,OAFX,KAEmBF,SAEvBG,EAJI,KAIaH,EAAOjB,IAI7BO,EAAc,SAAdA,EAAcR,GAClB,IAAIoB,EAASpB,EAAKS,MAAMW,OACxB,OAAKA,EACEZ,EAAYY,GADCpB,GAIhBqB,EAAW,SAAXA,EAAYD,EAAQpB,EAAMC,GAC9B,IAEIqB,EAAQC,EAFRL,EAAQM,eAAKxB,EAAKI,SAAU,CAAEH,GAAIA,IACtC,GAAIiB,EAAO,MAAO,CAAEC,YAAaC,EAAQA,OAAQpB,EAAMkB,MAAOA,GAE9D,IAAKK,EAAI,EAAGA,EAAIvB,EAAKI,SAASC,OAAQkB,IAAK,CAGzC,GADAD,EAASD,EAASrB,EADNA,EAAKI,SAASmB,GACKtB,GACnB,MAEd,OAAOqB,GClDIG,EAAc,SAACC,EAAO1B,GAC7B2B,EAAcD,EAAO1B,KACvB0B,EAAME,iBACNC,EAAK7B,EAAMA,EAAK8B,sBAIPC,EAAgB,SAACL,EAAO1B,GAC/BgC,EAAaN,EAAO1B,KACtB0B,EAAME,iBACNK,EAAOjC,EAAMA,EAAK8B,sBAIhBH,EAAgB,SAACD,EAAO1B,GAC5B,OAAOkC,YAASlC,EAAKmC,gBAAgBC,SAASC,KAAOrC,EAAKsC,iBAGtDN,EAAe,SAACN,EAAO1B,GAG3B,OAFaA,EAAKmC,gBAAgBC,QAAQG,aAChCL,YAASlC,EAAKmC,gBAAgBC,SAASC,KAC1BrC,EAAKsC,iBAGxBT,EAAO,SAAC7B,EAAMkC,GAClB,IAAId,EAAQoB,EAAUC,GAEtBrB,EAASsB,EAAU1C,MAMfwC,GAHJC,EAAUE,EAAe3C,IAEnByC,EAAQrC,SAASC,OAAS,EACjBuC,EAAoBH,GAEpBA,EAGFrB,EAAOX,MAAMT,KAE1Bc,EAAed,EAAM,CACnB6C,YAAaL,EAASvC,GACtB6C,cAAeZ,MAIbD,EAAS,SAACjC,EAAMkC,GACpB,IAAIa,EAAU3C,GAIZ2C,GAFF3C,EAAW4C,EAAYhD,IACVK,OAAS,EACTD,EAAS,GAET6C,EAAmBjD,KAG9Bc,EAAed,EAAM,CACnB6C,YAAaE,EAAS9C,GACtB6C,cAAeZ,KAKfQ,EAAY,SAAA1C,GAChB,OAAOA,EAAKS,MAAMW,QAGd4B,EAAc,SAAAhD,GAClB,OAAOA,EAAKS,MAAMT,KAAKI,UAGnBuC,EAAiB,SAAA3C,GACrB,IAAIoB,EAASsB,EAAU1C,GACvB,IAAKoB,EAAQ,OAAO,KACpB,IAAIhB,EAAW4C,EAAY5B,GAC3B,OAAOhB,EAASA,EAAS8C,QAAQlD,EAAKS,MAAMT,MAAQ,IAAM,MAGtD4C,EAAsB,SAAtBA,EAAsB5C,GAC1B,IAAImD,EAAYnD,EAAKI,SAASJ,EAAKI,SAASC,OAAS,GACrD,OAAI8C,EAAU/C,SAASC,OAAS,EACvBuC,EAAoBO,GAEpBA,GAILF,EAAqB,SAArBA,EAAqBjD,GACzB,IAAIoB,EAASsB,EAAU1C,GACvB,IAAKoB,EAAQ,OAAO,KACpB,IAAIgC,EAAiBJ,EAAY5B,GAC7BiC,EAAQD,EAAeF,QAAQlD,EAAKS,MAAMT,MAC9C,OAAIoD,EAAeC,EAAQ,GAClBD,EAAeC,EAAQ,GAEvBJ,EAAmB7B,IC9FjBkC,EAAqB,SAAC5B,EAAO1B,GACJ,IAA/BA,EAAKa,MAAMT,SAASC,QAC4B,IAA/C6B,YAASlC,EAAKmC,gBAAgBC,SAASmB,MACzC7B,EAAME,iBACN4B,EAAWxD,KAKXwD,EAAa,SAACxD,GAClB,IAGI+C,EAHEU,EAAO9C,EAAQX,GADM0D,EAEDzC,EAAWwC,EAAMzD,EAAKS,MAAMT,KAAKC,IAAnDmB,EAFmBsC,EAEnBtC,OAAQF,EAFWwC,EAEXxC,MAGhB,GAAIyC,EAAYzC,EAAOE,GACrB2B,EAAW3B,MACN,CACL,IAAIiC,EAAQjC,EAAOhB,SAAS8C,QAAQhC,GACpC6B,EAAWa,EAAaxC,EAAOhB,SAASiD,EAAQ,IAGlD,IAAIP,EAAgBC,EAASc,MAAMxD,OACnC0C,EAASc,MAAT,GAAAC,OAAoBf,EAASc,OAA7BC,OAAqC5C,EAAM2C,OAC3CE,iBAAO3C,EAAOhB,SAAU,CAAEH,GAAIiB,EAAMjB,KAEpCa,EAAed,EAAM,CACnB6C,YAAaE,EAAS9C,GACtB6C,cAAeA,EACf9C,KAAMyD,KAIJE,EAAc,SAAC3D,EAAMoB,GACzB,OAAyC,IAAlCA,EAAOhB,SAAS8C,QAAQlD,IAG3B4D,EAAe,SAAfA,EAAgB5D,GACpB,OAA6B,IAAzBA,EAAKI,SAASC,OACTL,EAEA4D,EAAa5D,EAAKI,SAASJ,EAAKI,SAASC,OAAQ,KCvC/C2D,EAAiB,SAACtC,EAAO1B,GACpC0B,EAAME,iBACNqC,EAAQjE,EAAM,WAGViE,EAAU,SAACjE,GAAS,IAAAkE,EACiBC,EAAWnE,GAA5CoE,EADgBF,EAChBE,cAAeC,EADCH,EACDG,cACjBC,EAAUC,EAAWF,GAErBZ,EAAO9C,EAAQX,GAJG0D,EAKEzC,EAAWwC,EAAMzD,EAAKS,MAAMT,KAAKC,IAAnDmB,EALgBsC,EAKhBtC,OAAQF,EALQwC,EAKRxC,MAEwB,IAApClB,EAAKS,MAAMT,KAAKI,SAASC,OAC3Be,EAAOhB,SAASoE,OAAOpD,EAAOhB,SAAS8C,QAAQhC,GAAS,EAAG,EAAGoD,GAE9DpD,EAAMd,SAASqE,QAAQH,GAEzBpD,EAAM2C,MAAQO,EACdtD,EAAed,EAAM,CAAE6C,YAAayB,EAAQrE,GAAI6C,cAAe,EAAG9C,KAAMyD,KAGpEU,EAAa,SAACnE,GAClB,IAAIuD,EAAMrB,YAASlC,EAAKmC,gBAAgBC,SAASmB,IAC7CM,EAAQ7D,EAAKa,MAAMgD,MACvB,MAAO,CACLO,cAAeP,EAAMa,MAAM,EAAGnB,GAC9Bc,cAAeR,EAAMa,MAAMnB,EAAKM,EAAMxD,UAIpCkE,EAAa,SAAAV,GACjB,MAAO,CACL5D,GAAIC,IAAQC,WACZwE,KAAM,OACNd,MAAOA,EACPzD,SAAU,KCrCDwE,EAAe,SAAClD,EAAO1B,GAElC,OADA0B,EAAME,iBACCF,EAAMmD,SAAWC,EAAO9E,GAAQ+E,EAAK/E,IAGxC+E,EAAO,SAAC/E,GACZ,IAAMyD,EAAO9C,EAAQX,GADA0D,EAEKzC,EAAWwC,EAAMzD,EAAKS,MAAMT,KAAKC,IAAnDmB,EAFasC,EAEbtC,OAAQF,EAFKwC,EAELxC,MAEhB,GAAKE,EAAL,CAEA,IAAI4D,EAAW5D,EAAOhB,SAClB6E,EAAYD,EAASA,EAAS9B,QAAQhC,GAAS,GAC9C+D,IAELA,EAAU7E,SAAS8E,KAAKhE,GACxB6C,iBAAOiB,EAAU,CAAE/E,GAAIiB,EAAMjB,KAE7Ba,EAAed,EAAM,CACnB6C,YAAa3B,EAAMjB,GACnB6C,cAAe9C,EAAK8B,wBAIlBgD,EAAS,SAAC9E,GACd,IAAMyD,EAAO9C,EAAQX,GADEmF,EAEgBlE,EAAWwC,EAAMzD,EAAKS,MAAMT,KAAKC,IAAhEkB,EAFegE,EAEfhE,YAAaC,EAFE+D,EAEF/D,OAAQF,EAFNiE,EAEMjE,MAE7B,GAAIE,GAAUD,EAAa,CACzB4C,iBAAO3C,EAAOhB,SAAU,CAAEH,GAAIiB,EAAMjB,KACpC,IAAIoD,EAAQlC,EAAYf,SAAS8C,QAAQ9B,GACzCD,EAAYf,SAASoE,OAAOnB,EAAQ,EAAG,EAAGnC,GAE1CJ,EAAed,EAAM,CACnB6C,YAAa3B,EAAMjB,GACnB6C,cAAe9C,EAAK8B,uBCnCbsD,EAAa,SAAApF,GACxB,IAAIqF,EAAW9E,EAAYP,GAAMa,MAEjC,GAAIwE,EAASxC,cAAgB7C,EAAKa,MAAMZ,GAAI,CAC1C,IAAIqF,EAAUtF,EAAKmC,gBAAgBC,QAC/ByB,EAAQ7D,EAAKa,MAAMgD,MAEF,IAAjBA,EAAMxD,OACRiF,EAAQC,QAEJ1B,EAAMxD,OAASgF,EAASvC,cAC1BZ,YAASoD,EAASzB,EAAMxD,QAExB6B,YAASoD,EAASD,EAASvC,iBCJd0C,cAanB,SAAAA,EAAY/E,GAAO,IAAAgF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMnF,KAbRuF,OAAS,CACPC,EAAG3C,EACH4C,EAAGtB,EACHuB,GAAInC,EACJoC,GAAI3E,EACJ4E,GAAItE,GASJ0D,EAAK5E,MAAQ4E,EAAKhF,MAAMT,KACxByF,EAAKtD,gBAAkBmE,IAAMC,YAHZd,6FAJahF,EAAOI,GACrC,OAAOA,IAAUJ,EAAMT,KAAOS,EAAMT,KAAO,kEAU3CoF,EAAWQ,mDAIXR,EAAWQ,wCAGHlE,GACR,IAAI8E,EAAUZ,KAAKI,OAAOtE,EAAM+E,SAChC,GAAID,EAAS,OAAOA,EAAQT,KAAKH,KAAMlE,EAAOkE,8CAI9C,OAnCgB,8CAuChB,OAAO1D,YAAS0D,KAAKzD,gBAAgBC,SAASmB,qCAGvC,IAAAmD,EAAAd,KACP,OACEe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,SAAUpB,KAAKzD,gBACf2E,UAAU,YACVG,KAAMrB,KAAK/E,MAAMgD,MACjBqD,UAAW,SAAAxF,GAAK,OAAIgF,EAAKQ,UAAUxF,IACnCV,SAAU,SAAAU,GAAK,OC1DE,SAACA,EAAO1B,GACjC,IAAMyD,EAAO9C,EAAQX,GACbkB,EAAUD,EAAWwC,EAAMzD,EAAKS,MAAMT,KAAKC,IAA3CiB,MAEJ4B,EAAgB9C,EAAK8B,mBACzBZ,EAAM2C,MAAQnC,EAAMyF,OAAOtD,MACvBtD,EAAYP,GAAMa,MAAMgC,cAAgB3B,EAAMjB,GAChDa,EAAed,EAAM,CAAE8C,cAAeA,EAAe9C,KAAMyD,IAE3D3C,EAAed,EAAM,CAAEA,KAAMyD,IDiDJ2D,CAAY1F,EAAOgF,MAEvCd,KAAK/E,MAAMT,SAASiH,IAAI,SAACrH,EAAMqD,GAC9B,OAAOsD,EAAAC,EAAAC,cAACrB,EAAD,CAAM8B,IAAKtH,EAAKC,GAAImB,OAAQsF,EAAM1G,KAAMA,cAnDvBsG,IAAMiB,WERnBC,cACnB,SAAAA,EAAY/G,GAAO,IAAAgF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACjB/B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KAAMnF,KAEDI,MAAQ,CACXgC,YAAa,KACbC,cAAe,KACf9C,KAAMD,EAAS0H,OAAOC,MANPjC,0EAWbG,KAAKnF,MAAMO,UACb4E,KAAKnF,MAAMO,SAAS4E,KAAK/E,MAAMb,uCAKjC,OACE2G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACc,EAAD,CAAM3H,KAAM4F,KAAK/E,MAAMb,KAAMU,SAAUkF,eApBTU,IAAMiB,WCG7BK,MAJf,WACE,OAAOjB,EAAAC,EAAAC,cAACgB,EAAD,OCQWC,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxB,EAAAC,EAAAC,cAACuB,EAAD,MAAS1H,SAAS2H,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.100d2ebb.chunk.js","sourcesContent":["import shortid from 'shortid'\nimport { clone, find } from 'lodash'\n\nexport const identify = node => {\n  node.id = shortid.generate()\n  if (node.children && node.children.length !== 0) {\n    node.children.forEach((node) => {\n      return identify(node)\n    })\n  }\n  return node\n}\n\nexport const getDocument = node => {\n  return getRootNode(node).props.document\n}\n\nexport const getTree = node => {\n  return clone(getDocument(node).state.node)\n}\n\nexport const updateDocument = (node, props) => {\n  const document = getDocument(node)\n  document.setState(props)\n  document.onChange()\n  return\n}\n\nexport const searchTree = (child, id) => {\n  let grandParent = null\n  let parent = null\n  if (child.id === id) {\n    return { grandParent, parent, child }\n  } else {\n    return traverse(parent, child, id)\n  }\n}\n\nconst getRootNode = node => {\n  let parent = node.props.parent\n  if (!parent) return node\n  return getRootNode(parent)\n}\n\nconst traverse = (parent, node, id) => {\n  let child = find(node.children, { id: id })\n  if (child) return { grandParent: parent, parent: node, child: child }\n  let result, i\n  for (i = 0; i < node.children.length; i++) {\n    let child = node.children[i]\n    result = traverse(node, child, id)\n    if (result) break\n  }\n  return result\n}\n","import { position } from 'caret-pos'\nimport { updateDocument } from './../services/tree'\n\nexport const handleUpKey = (event, node) => {\n  if (isOnFirstLine(event, node)) {\n    event.preventDefault()\n    goUp(node, node.getCaretPosition())\n  }\n}\n\nexport const handleDownKey = (event, node) => {\n  if (isOnLastLine(event, node)) {\n    event.preventDefault()\n    goDown(node, node.getCaretPosition())\n  }\n}\n\nconst isOnFirstLine = (event, node) => {\n  return position(node.contentEditable.current).top <= node.getLineHeight()\n}\n\nconst isOnLastLine = (event, node) => {\n  let height = node.contentEditable.current.clientHeight\n  let top = position(node.contentEditable.current).top\n  return height - top <= node.getLineHeight()\n}\n\nconst goUp = (node, position) => {\n  let parent, prevNode, sibling\n\n  parent = getParent(node)\n  if (!parent) return\n\n  sibling = getPrevSibling(node)\n  if (sibling) {\n    if (sibling.children.length > 0) {\n      prevNode = getPrevSiblingChild(sibling)\n    } else {\n      prevNode = sibling\n    }\n  } else {\n    prevNode = parent.props.node\n  }\n  updateDocument(node, {\n    focusedNode: prevNode.id,\n    caretPosition: position\n  })\n}\n\nconst goDown = (node, position) => {\n  let nextNode, children\n\n  children = getChildren(node)\n  if (children.length > 0) {\n    nextNode = children[0]\n  } else {\n    nextNode = getNextParentChild(node)\n  }\n  if (nextNode) {\n    updateDocument(node, {\n      focusedNode: nextNode.id,\n      caretPosition: position\n    })\n  }\n}\n\nconst getParent = node => {\n  return node.props.parent\n}\n\nconst getChildren = node => {\n  return node.props.node.children\n}\n\nconst getPrevSibling = node => {\n  let parent = getParent(node)\n  if (!parent) return null\n  let children = getChildren(parent)\n  return children[children.indexOf(node.props.node) - 1] || null\n}\n\nconst getPrevSiblingChild = node => {\n  let lastChild = node.children[node.children.length - 1]\n  if (lastChild.children.length > 0) {\n    return getPrevSiblingChild(lastChild)\n  } else {\n    return lastChild\n  }\n}\n\nconst getNextParentChild = node => {\n  let parent = getParent(node)\n  if (!parent) return null\n  let parentChildren = getChildren(parent)\n  let index = parentChildren.indexOf(node.props.node)\n  if (parentChildren[index + 1]) {\n    return parentChildren[index + 1]\n  } else {\n    return getNextParentChild(parent)\n  }\n}\n","import { position } from 'caret-pos'\nimport { remove } from 'lodash'\nimport { updateDocument, getTree, searchTree } from './../services/tree'\n\nexport const handleBackspaceKey = (event, node) => {\n  if ( node.state.children.length === 0) {\n    if (position(node.contentEditable.current).pos === 0) {\n      event.preventDefault()\n      removeNode(node)\n    }\n  }\n}\n\nconst removeNode = (node) => {\n  const tree = getTree(node)\n  const { parent, child } = searchTree(tree, node.props.node.id)\n\n  let nextNode\n  if (isOnlyChild(child, parent)) {\n    nextNode = parent\n  } else {\n    let index = parent.children.indexOf(child)\n    nextNode = getLastChild(parent.children[index - 1])\n  }\n\n  let caretPosition = nextNode.value.length\n  nextNode.value = `${nextNode.value}${child.value}`\n  remove(parent.children, { id: child.id })\n\n  updateDocument(node, {\n    focusedNode: nextNode.id,\n    caretPosition: caretPosition,\n    node: tree\n  })\n}\n\nconst isOnlyChild = (node, parent) => {\n  return parent.children.indexOf(node) === 0\n}\n\nconst getLastChild = (node) => {\n  if (node.children.length === 0) {\n    return node\n  } else {\n    return getLastChild(node.children[node.children.length -1])\n  }\n}\n","import shortid from 'shortid'\n\nimport { position } from 'caret-pos'\nimport { updateDocument, getTree, searchTree } from './../services/tree'\n\nexport const handleEnterKey = (event, node) => {\n  event.preventDefault()\n  addNode(node, 'append')\n}\n\nconst addNode = (node) => {\n  const { prevNodeValue, nextNodeValue } = splitValue(node)\n  const newNode = createNode(nextNodeValue)\n\n  const tree = getTree(node)\n  const { parent, child } = searchTree(tree, node.props.node.id)\n\n  if (node.props.node.children.length === 0) {\n    parent.children.splice(parent.children.indexOf(child) + 1, 0, newNode)\n  } else {\n    child.children.unshift(newNode)\n  }\n  child.value = prevNodeValue\n  updateDocument(node, { focusedNode: newNode.id, caretPosition: 0, node: tree })\n}\n\nconst splitValue = (node) => {\n  let pos = position(node.contentEditable.current).pos\n  let value = node.state.value\n  return {\n    prevNodeValue: value.slice(0, pos),\n    nextNodeValue: value.slice(pos, value.length)\n  }\n}\n\nconst createNode = value => {\n  return {\n    id: shortid.generate(),\n    type: 'text',\n    value: value,\n    children: []\n  }\n}\n","import { remove } from 'lodash'\nimport { updateDocument, getTree, searchTree } from './../services/tree'\n\nexport const handleTabKey = (event, node) => {\n  event.preventDefault()\n  return event.shiftKey ? unnest(node) : nest(node)\n}\n\nconst nest = (node) => {\n  const tree = getTree(node)\n  const { parent, child } = searchTree(tree, node.props.node.id)\n\n  if (!parent) return\n\n  let siblings = parent.children\n  let newParent = siblings[siblings.indexOf(child) - 1]\n  if (!newParent) return\n\n  newParent.children.push(child)\n  remove(siblings, { id: child.id })\n\n  updateDocument(node, {\n    focusedNode: child.id,\n    caretPosition: node.getCaretPosition()\n  })\n}\n\nconst unnest = (node) => {\n  const tree = getTree(node)\n  const { grandParent, parent, child } = searchTree(tree, node.props.node.id)\n\n  if (parent && grandParent) {\n    remove(parent.children, { id: child.id })\n    let index = grandParent.children.indexOf(parent)\n    grandParent.children.splice(index + 1, 0, child)\n\n    updateDocument(node, {\n      focusedNode: child.id,\n      caretPosition: node.getCaretPosition()\n    })\n  }\n}\n","import { getDocument } from '../services/tree'\nimport { position } from 'caret-pos'\n\nexport const applyFocus = node => {\n  let docState = getDocument(node).state\n\n  if (docState.focusedNode === node.state.id) {\n    let element = node.contentEditable.current\n    let value = node.state.value\n\n    if (value.length === 0) {\n      element.focus()\n    } else {\n      if (value.length < docState.caretPosition) {\n        position(element, value.length)\n      } else {\n        position(element, docState.caretPosition)\n      }\n    }\n  }\n}\n","import React from 'react'\nimport ContentEditable from 'react-contenteditable'\nimport { position } from 'caret-pos'\nimport { handleUpKey, handleDownKey } from '../handlers/arrowKeys'\nimport { handleBackspaceKey } from '../handlers/backspaceKey'\nimport { handleEnterKey } from '../handlers/enterKey'\nimport { handleTabKey } from '../handlers/tabKey'\nimport { handleInput } from '../handlers/input'\nimport { applyFocus } from '../handlers/render'\n\nconst LINE_HEIGHT = 24 // Replace with detected line-height\n\nexport default class Node extends React.Component {\n  keyMap = {\n    8: handleBackspaceKey,\n    9: handleTabKey,\n    13: handleEnterKey,\n    38: handleUpKey,\n    40: handleDownKey\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return state !== props.node ? props.node : null\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = this.props.node\n    this.contentEditable = React.createRef()\n  }\n\n  componentDidMount() {\n    applyFocus(this)\n  }\n\n  componentDidUpdate() {\n    applyFocus(this)\n  }\n\n  onKeyDown(event) {\n    let handler = this.keyMap[event.keyCode]\n    if (handler) return handler.call(this, event, this)\n  }\n\n  getLineHeight() {\n    return LINE_HEIGHT\n  }\n\n  getCaretPosition() {\n    return position(this.contentEditable.current).pos\n  }\n\n  render() {\n    return (\n      <div className=\"node\">\n        <ContentEditable\n          innerRef={this.contentEditable}\n          className=\"node-self\"\n          html={this.state.value}\n          onKeyDown={event => this.onKeyDown(event)}\n          onChange={event => handleInput(event, this)}\n        />\n        {this.state.children.map((node, index) => {\n          return <Node key={node.id} parent={this} node={node} />\n        })}\n      </div>\n    )\n  }\n}\n","import { getDocument, updateDocument, getTree, searchTree } from './../services/tree'\n\nexport const handleInput = (event, node) => {\n  const tree = getTree(node)\n  const { child } = searchTree(tree, node.props.node.id)\n\n  let caretPosition = node.getCaretPosition()\n  child.value = event.target.value\n  if (getDocument(node).state.focusedNode === child.id) {\n    updateDocument(node, { caretPosition: caretPosition, node: tree })\n  } else {\n    updateDocument(node, { node: tree })\n  }\n}\n","import React from 'react'\nimport Node from './node'\nimport { identify } from '../services/tree'\n\nexport default class Document extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      focusedNode: null,\n      caretPosition: null,\n      node: identify(window.DOC)\n    }\n  }\n\n  onChange() {\n    if (this.props.onChange) {\n      this.props.onChange(this.state.node)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"document\">\n        <Node node={this.state.node} document={this} />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Document from './components/document'\n\nfunction App() {\n  return <Document />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}